{"version":3,"sources":["components/Button/Button.js","components/User/User.js","socket.js","components/Users/Users.js","context/Theme/ThemeContext.js","hoc/Layout/Layout.js","containers/Chatting/Header/Header.js","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.js","context/Auth/AuthContext.js","containers/Chatting/ChattingMessages/ChattingMessages.js","containers/Chatting/ChattingSend/ChattingSend.js","containers/Chatting/Chatting.js","components/Input/Input.js","axios.js","hooks/useAuth.js","containers/Auth/Login/Login.js","containers/Auth/Signup/Signup.js","App.js","serviceWorker.js","context/Auth/AuthProvider.js","context/Theme/ThemeProvider.js","index.js","components/User/User.module.scss","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.module.scss","containers/Auth/Auth.module.scss","assets/default.jpg","containers/Chatting/Header/Header.module.scss","containers/Chatting/ChattingSend/ChattingSend.module.scss","hoc/Layout/Layout.module.scss","components/Users/Users.module.scss","components/Button/Button.module.scss","containers/Chatting/Chatting.module.scss","containers/Chatting/ChattingMessages/ChattingMessages.module.scss","components/Input/Input.module.scss"],"names":["Button","props","className","classes","Btn","join","onClick","type","disabled","disable","children","User","to","Usr","UsrPic","online","UsrPicOnline","src","pic","alt","UsrName","name","socket","io","connect","loggedIn","user","emit","Users","useState","users","setUsers","useEffect","on","onlineUsers","UsersTitle","map","key","username","ThemeContext","createContext","isDark","toggleTheme","Layout","useContext","Grid","container","spacing","style","overflow","item","xs","Right","ThemeBtn","Header","useParams","HeaderImg","HeaderName","ChatMessage","msgCreatedAt","Date","createdAt","time","getHours","getMinutes","Container","Recevied","Sent","Msg","msg","AuthContext","setUser","ChattingMessages","containerRef","useRef","msgs","setMsgs","isLoading","setIsLoading","console","log","current","scrollTop","scrollHeight","curUser","chatWith","data","prev","Msgs","ref","i","message","ChattingSend","msgRef","sendMsgHandler","value","trim","from","Send","placeholder","SendTextarea","onKeyDown","e","keyCode","shiftKey","preventDefault","SendBtn","Chatting","Chat","Input","forwardRef","required","instance","axios","create","baseURL","withCredentials","useAuth","error","setError","history","useHistory","push","useCallback","setter","res","sendAuthReq","url","a","replace","isEmail","email","isLength","password","min","passwordConfirm","post","response","getMe","get","Login","Auth","onSubmit","AuthError","Signup","App","render","exact","path","height","display","alignItems","justifyContent","fixed","maxWidth","Boolean","window","location","hostname","match","AuthProvider","Provider","ThemeProvider","isDarkLS","localStorage","getItem","JSON","parse","setIsDark","setItem","stringify","app","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.606ab7c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <button\r\n      className={[classes.Btn, props.className].join(' ')}\r\n      onClick={props.onClick}\r\n      type={props.type || null}\r\n      disabled={props.disable}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './User.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport pic from '../../assets/default.jpg';\r\n\r\nexport const User = (props) => {\r\n  return (\r\n    <Link to={props.to} className={classes.Usr}>\r\n      <div className={classes.UsrPic}>\r\n        {props.online ? <div className={classes.UsrPicOnline}></div> : null}\r\n        <img src={pic} alt=\"\" className={classes.UsrPic} />\r\n      </div>\r\n      <p className={classes.UsrName}>{props.name}</p>\r\n    </Link>\r\n  );\r\n};\r\n","import io from 'socket.io-client';\r\n\r\nexport const socket = io.connect(\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://127.0.0.1:4000'\r\n    : 'https://pacific-everglades-97653.herokuapp.com'\r\n);\r\n\r\nexport const loggedIn = (user) => socket.emit('loggedIn', user);\r\n","import React, { useEffect, useState } from 'react';\r\nimport classes from './Users.module.scss';\r\nimport { User } from '../User/User';\r\nimport { socket } from '../../socket';\r\n\r\nexport const Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('userloggedin', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n    socket.on('userloggedout', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Users}>\r\n      <h2 className={classes.UsersTitle}>Users</h2>\r\n\r\n      {users.map((user) => (\r\n        <User\r\n          key={user.username}\r\n          name={user.username}\r\n          to={`/chat/${user.username}`}\r\n          online={user.online}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from 'react';\r\n\r\nconst ThemeContext = createContext({\r\n  isDark: null,\r\n  toggleTheme: () => {},\r\n});\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext } from 'react';\r\nimport classes from './Layout.module.scss';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { FaRegMoon, FaMoon } from 'react-icons/fa';\r\nimport { Users } from '../../components/Users/Users';\r\nimport ThemeContext from '../../context/Theme/ThemeContext';\r\n\r\nexport const Layout = (props) => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <Grid container spacing={0} style={{ overflow: 'hidden' }}>\r\n      <Grid item xs={2} className={classes.Right}>\r\n        <Users />\r\n        <Button className={classes.ThemeBtn} onClick={toggleTheme}>\r\n          {isDark ? <FaMoon /> : <FaRegMoon />} <p>Dark Mode</p>\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {props.children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Header.module.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport pic from '../../../assets/default.jpg';\r\n\r\nexport const Header = () => {\r\n  const { username } = useParams();\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <img src={pic} alt={username} className={classes.HeaderImg} />\r\n      <p className={classes.HeaderName}>{username}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './ChatMessage.module.scss';\r\n\r\nexport const ChatMessage = (props) => {\r\n  const msgCreatedAt = new Date(props.createdAt);\r\n  const time = `${msgCreatedAt.getHours()}:${msgCreatedAt.getMinutes()}`;\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        classes.Container,\r\n        props.type === 'recevied'\r\n          ? classes.Recevied\r\n          : props.type === 'sent'\r\n          ? classes.Sent\r\n          : null,\r\n      ].join(' ')}\r\n    >\r\n      <p className={classes.Msg}>{props.msg}</p>\r\n      <p className={classes.Date}>{time}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  setUser: () => {},\r\n});\r\n\r\nexport default AuthContext;\r\n","import React, { useRef, useEffect, useContext, useState } from 'react';\r\nimport classes from './ChattingMessages.module.scss';\r\nimport { ChatMessage } from './ChatMessage/ChatMessage';\r\nimport AuthContext from '../../../context/Auth/AuthContext';\r\nimport { useParams } from 'react-router-dom';\r\nimport { socket } from '../../../socket';\r\n\r\nexport const ChattingMessages = () => {\r\n  const containerRef = useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n  const { username } = useParams();\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(isLoading);\r\n    console.log(msgs);\r\n  });\r\n\r\n  useEffect(() => {\r\n    containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n  }, [msgs, isLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    socket.emit('room', { curUser: user.username, chatWith: username });\r\n    socket.on('getAllMsgs', (data) => {\r\n      console.log('getAllMsgs');\r\n      setMsgs(data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [user, username]);\r\n\r\n  useEffect(() => {\r\n    socket.on('sendmsg', (data) => setMsgs((prev) => [...prev, data]));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Msgs} ref={containerRef}>\r\n      {isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        msgs.map((msg, i) => (\r\n          <ChatMessage\r\n            key={`${msg.user}-${i}`}\r\n            type={msg.user === user.username ? 'sent' : 'recevied'}\r\n            createdAt={msg.createdAt}\r\n            msg={msg.message}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useRef } from 'react';\r\nimport classes from './ChattingSend.module.scss';\r\nimport { TextareaAutosize as Textarea } from '@material-ui/core';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { FiSend } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport AuthContext from '../../../context/Auth/AuthContext';\r\nimport { socket } from '../../../socket';\r\n\r\nexport const ChattingSend = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { username } = useParams();\r\n\r\n  const msgRef = useRef(null);\r\n\r\n  const sendMsgHandler = () => {\r\n    if (msgRef.current.value.trim() === '') {\r\n      return (msgRef.current.value = '');\r\n    }\r\n    socket.emit('sendmsg', {\r\n      message: msgRef.current.value,\r\n      from: user.username,\r\n      to: username,\r\n    });\r\n    msgRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Send}>\r\n      <Textarea\r\n        placeholder=\"Type a message...\"\r\n        className={classes.SendTextarea}\r\n        ref={msgRef}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13 && !e.shiftKey) {\r\n            e.preventDefault();\r\n            sendMsgHandler();\r\n          }\r\n        }}\r\n      />\r\n      <Button className={classes.SendBtn} onClick={sendMsgHandler}>\r\n        <FiSend />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Chatting.module.scss';\r\nimport { Header } from './Header/Header';\r\nimport { ChattingMessages } from './ChattingMessages/ChattingMessages';\r\nimport { ChattingSend } from './ChattingSend/ChattingSend';\r\n\r\nexport const Chatting = () => {\r\n  return (\r\n    <div className={classes.Chat}>\r\n      <Header />\r\n      <ChattingMessages />\r\n      <ChattingSend />\r\n    </div>\r\n  );\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\nexport const Input = forwardRef((props, ref) => {\r\n  return (\r\n    <input\r\n      type={props.type || 'text'}\r\n      placeholder={props.placeholder}\r\n      className={[classes.Input, props.className].join(' ')}\r\n      required\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === 'development'\r\n      ? 'http://127.0.0.1:4000/api/v1'\r\n      : 'https://pacific-everglades-97653.herokuapp.com/api/v1',\r\n  withCredentials: true,\r\n});\r\n\r\nexport default instance;\r\n","import { useState, useContext, useCallback } from 'react';\r\nimport AuthContext from '../context/Auth/AuthContext';\r\nimport { loggedIn } from '../socket';\r\nimport axios from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport isEmail from 'validator/lib/isEmail';\r\nimport isLength from 'validator/lib/isLength';\r\n\r\nexport const useAuth = () => {\r\n  const [error, setError] = useState(false);\r\n  const { setUser } = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const push = useCallback(history.push, []);\r\n\r\n  const setter = useCallback(\r\n    (res, to = '/') => {\r\n      setUser(res.data.data);\r\n      loggedIn(res.data.data);\r\n      setIsLoading(false);\r\n      push(to);\r\n    },\r\n    [setUser, push]\r\n  );\r\n\r\n  const sendAuthReq = async (url, data) => {\r\n    if (data.username && data.username.replace(/\\s/g, '') === '') {\r\n      return setError({ message: 'Username not valid.' });\r\n    }\r\n\r\n    if (!isEmail(data.email) || !isLength(data.password, { min: 8 })) {\r\n      return setError({ message: 'Try again with a valid values.' });\r\n    }\r\n\r\n    if (data.passwordConfirm && data.passwordConfirm !== data.password) {\r\n      return setError({ message: 'Passwords does not match.' });\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(`/users${url}`, data);\r\n      console.log(res.data.data);\r\n      setter(res);\r\n    } catch (error) {\r\n      setError(error.response.data);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getMe = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get('/users/me');\r\n      setter(res);\r\n    } catch (error) {\r\n      setError(true);\r\n      setIsLoading(false);\r\n      push('/login');\r\n    }\r\n  }, [push, setter]);\r\n\r\n  return { sendAuthReq, isLoading, error, getMe };\r\n};\r\n","import React, { useRef } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n  const { sendAuthReq, error, isLoading } = useAuth();\r\n  const email = useRef(null);\r\n  const password = useRef(null);\r\n\r\n  const submitHanlder = () =>\r\n    sendAuthReq('/login', {\r\n      email: email.current.value,\r\n      password: password.current.value,\r\n    });\r\n\r\n  return (\r\n    <form\r\n      className={classes.Auth}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        return submitHanlder();\r\n      }}\r\n    >\r\n      <h2>Log in</h2>\r\n      {error ? <p className={classes.AuthError}>{error.message}</p> : null}\r\n      <Input type=\"email\" placeholder=\"Your E-mail\" ref={email} />\r\n      <Input type=\"password\" placeholder=\"Your Password\" ref={password} />\r\n      <Button>{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n      <Link to=\"/signup\">Create new account</Link>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Signup = () => {\r\n  const { sendAuthReq, error, isLoading } = useAuth();\r\n  const username = useRef(null);\r\n  const email = useRef(null);\r\n  const password = useRef(null);\r\n  const passwordConfirm = useRef(null);\r\n\r\n  const submitHanlder = () =>\r\n    sendAuthReq('/signup', {\r\n      username: username.current.value,\r\n      email: email.current.value,\r\n      password: password.current.value,\r\n      passwordConfirm: passwordConfirm.current.value,\r\n    });\r\n\r\n  return (\r\n    <form\r\n      className={classes.Auth}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        return submitHanlder();\r\n      }}\r\n    >\r\n      <h2>Sign up</h2>\r\n\r\n      {error ? <p>{error.message}</p> : null}\r\n      <Input type=\"text\" placeholder=\"Your Username\" ref={username} />\r\n      <Input type=\"email\" placeholder=\"Your E-mail\" ref={email} />\r\n      <Input type=\"password\" placeholder=\"Your Password\" ref={password} />\r\n      <Input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Your Password\"\r\n        ref={passwordConfirm}\r\n      />\r\n      <Button>{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n      <Link to=\"/login\">Login to your account</Link>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport './App.scss';\r\nimport { Layout } from './hoc/Layout/Layout';\r\nimport { Container } from '@material-ui/core';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Chatting } from './containers/Chatting/Chatting';\r\nimport ThemeContext from './context/Theme/ThemeContext';\r\nimport AuthContext from './context/Auth/AuthContext';\r\nimport { Login } from './containers/Auth/Login/Login';\r\nimport { Signup } from './containers/Auth/Signup/Signup';\r\nimport { useAuth } from './hooks/useAuth';\r\n\r\nfunction App() {\r\n  const { isDark } = useContext(ThemeContext);\r\n  const { user } = useContext(AuthContext);\r\n  const { getMe } = useAuth();\r\n\r\n  useEffect(() => {\r\n    getMe();\r\n  }, [getMe]);\r\n\r\n  let render = (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div\r\n            style={{\r\n              height: '100%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <h1>Select User</h1>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/chat/:username\">\r\n          <Chatting />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n\r\n  if (!user) {\r\n    render = (\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Container fixed maxWidth=\"sm\">\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Redirect to=\"/login\" />\r\n          </Switch>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={['App', isDark ? 'Dark' : 'Light'].join(' ')}>{render}</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport AuthContext from './AuthContext';\r\n\r\nconst AuthProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useState } from 'react';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nconst ThemeProvider = (props) => {\r\n  const isDarkLS = localStorage.getItem('isDark');\r\n\r\n  const [isDark, setIsDark] = useState(isDarkLS ? JSON.parse(isDarkLS) : true);\r\n\r\n  const toggleTheme = () =>\r\n    setIsDark((prev) => {\r\n      localStorage.setItem('isDark', JSON.stringify(!prev));\r\n      return !prev;\r\n    });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\nexport default ThemeProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { socket } from './socket';\r\nimport AuthProvidor from './context/Auth/AuthProvider';\r\nimport ThemeProvidor from './context/Theme/ThemeProvider';\r\n\r\n(() => socket)();\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <AuthProvidor>\r\n      <ThemeProvidor>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ThemeProvidor>\r\n    </AuthProvidor>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Usr\":\"User_Usr__3MsOa\",\"UsrPic\":\"User_UsrPic__109hm\",\"UsrPicOnline\":\"User_UsrPicOnline__3nFIW\",\"UsrName\":\"User_UsrName__yNN1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ChatMessage_Container__2IsQr\",\"Msg\":\"ChatMessage_Msg__1U98C\",\"Recevied\":\"ChatMessage_Recevied__1zSaq\",\"Sent\":\"ChatMessage_Sent__Jfl94\",\"Date\":\"ChatMessage_Date__2C6CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__28SGs\",\"AuthError\":\"Auth_AuthError__3r9be\"};","module.exports = __webpack_public_path__ + \"static/media/default.5881650b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2_ci0\",\"HeaderImg\":\"Header_HeaderImg__YJ_cK\",\"HeaderName\":\"Header_HeaderName__eYVeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Send\":\"ChattingSend_Send__1ztL_\",\"SendTextarea\":\"ChattingSend_SendTextarea__1G_f3\",\"SendBtn\":\"ChattingSend_SendBtn__Zjerc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Right\":\"Layout_Right__2hNw0\",\"Left\":\"Layout_Left__1eF2e\",\"ThemeBtn\":\"Layout_ThemeBtn__oe5wA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__3Kw6G\",\"UsersTitle\":\"Users_UsersTitle__1ioh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__22W31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chatting_Chat__KlwHr\",\"Error\":\"Chatting_Error__3VsbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Msgs\":\"ChattingMessages_Msgs__h3PUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3nJZI\"};"],"sourceRoot":""}