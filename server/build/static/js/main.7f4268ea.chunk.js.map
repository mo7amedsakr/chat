{"version":3,"sources":["socket.js","components/Button/Button.js","components/User/User.js","components/Users/Users.js","context/Theme.js","hoc/Layout/Layout.js","containers/Chatting/Header/Header.js","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.js","axios.js","context/Error.js","context/Auth.js","isEmail.js","containers/Chatting/ChattingMessages/ChattingMessages.js","containers/Chatting/ChattingSend/ChattingSend.js","containers/Chatting/Chatting.js","components/Input/Input.js","containers/Auth/Login/Login.js","containers/Auth/Signup/Signup.js","App.js","serviceWorker.js","index.js","components/User/User.module.scss","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.module.scss","containers/Auth/Auth.module.scss","assets/default.jpg","containers/Chatting/Header/Header.module.scss","containers/Chatting/ChattingSend/ChattingSend.module.scss","hoc/Layout/Layout.module.scss","components/Users/Users.module.scss","components/Button/Button.module.scss","containers/Chatting/Chatting.module.scss","containers/Chatting/ChattingMessages/ChattingMessages.module.scss","components/Input/Input.module.scss"],"names":["socket","io","connect","loggedIn","user","emit","Button","props","className","classes","Btn","join","onClick","type","disabled","disable","children","User","to","Usr","UsrPic","online","UsrPicOnline","src","pic","alt","UsrName","name","Users","useState","users","setUsers","useEffect","on","onlineUsers","UsersTitle","map","key","username","ThemeContext","createContext","isDark","toggleTheme","ThemeProvider","isDarkLS","localStorage","getItem","JSON","parse","setIsDark","Provider","value","prev","setItem","stringify","Layout","useContext","Grid","container","spacing","style","overflow","item","xs","Right","ThemeBtn","Header","useParams","HeaderImg","HeaderName","ChatMessage","msgCreatedAt","Date","createdAt","time","getHours","getMinutes","Container","Recevied","Sent","Msg","msg","instance","axios","create","baseURL","withCredentials","ErrorContext","error","setError","ErrorProvider","AuthContext","setUser","authLoading","sendAuthReq","a","AuthProvider","isLoading","setIsLoading","push","useHistory","getMe","useCallback","get","res","data","url","replace","message","email","test","toLowerCase","password","length","passwordConfirm","post","response","ChattingMessages","containerRef","useRef","msgs","setMsgs","current","scrollTop","scrollHeight","curUser","chatWith","Msgs","ref","i","ChattingSend","msgRef","sendMsgHandler","trim","from","Send","placeholder","SendTextarea","onKeyDown","e","keyCode","shiftKey","preventDefault","SendBtn","Chatting","Chat","Input","forwardRef","required","Login","Auth","onSubmit","AuthError","Signup","App","render","exact","path","height","display","alignItems","justifyContent","fixed","maxWidth","textAlign","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","app","StrictMode","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7f4268ea.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nexport const socket = io.connect(\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://127.0.0.1:4000'\r\n    : 'https://p-to-p-chat.herokuapp.com'\r\n);\r\n\r\nexport const loggedIn = (user) => socket.emit('loggedIn', user);\r\n","import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <button\r\n      className={[classes.Btn, props.className].join(' ')}\r\n      onClick={props.onClick}\r\n      type={props.type || null}\r\n      disabled={props.disable}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './User.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport pic from '../../assets/default.jpg';\r\n\r\nexport const User = (props) => {\r\n  return (\r\n    <Link to={props.to} className={classes.Usr}>\r\n      <div className={classes.UsrPic}>\r\n        {props.online ? <div className={classes.UsrPicOnline}></div> : null}\r\n        <img src={pic} alt=\"\" className={classes.UsrPic} />\r\n      </div>\r\n      <p className={classes.UsrName}>{props.name}</p>\r\n    </Link>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport classes from './Users.module.scss';\r\nimport { User } from '../User/User';\r\nimport { socket } from '../../socket';\r\n\r\nexport const Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('userloggedin', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n    socket.on('userloggedout', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Users}>\r\n      <h2 className={classes.UsersTitle}>Users</h2>\r\n\r\n      {users.map((user) => (\r\n        <User\r\n          key={user.username}\r\n          name={user.username}\r\n          to={`/chat/${user.username}`}\r\n          online={user.online}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext({\r\n  isDark: null,\r\n  toggleTheme: () => {},\r\n});\r\n\r\nexport const ThemeProvider = (props) => {\r\n  const isDarkLS = localStorage.getItem('isDark');\r\n\r\n  const [isDark, setIsDark] = useState(isDarkLS ? JSON.parse(isDarkLS) : true);\r\n\r\n  const toggleTheme = () =>\r\n    setIsDark((prev) => {\r\n      localStorage.setItem('isDark', JSON.stringify(!prev));\r\n      return !prev;\r\n    });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport classes from './Layout.module.scss';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { FaRegMoon, FaMoon } from 'react-icons/fa';\r\nimport { Users } from '../../components/Users/Users';\r\nimport { ThemeContext } from '../../context/Theme';\r\n\r\nexport const Layout = (props) => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <Grid container spacing={0} style={{ overflow: 'hidden' }}>\r\n      <Grid item xs={2} className={classes.Right}>\r\n        <Users />\r\n        <Button className={classes.ThemeBtn} onClick={toggleTheme}>\r\n          {isDark ? <FaMoon /> : <FaRegMoon />} <p>Dark Mode</p>\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {props.children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Header.module.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport pic from '../../../assets/default.jpg';\r\n\r\nexport const Header = () => {\r\n  const { username } = useParams();\r\n\r\n  return (\r\n    <div className={classes.Header}>\r\n      <img src={pic} alt={username} className={classes.HeaderImg} />\r\n      <p className={classes.HeaderName}>{username}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './ChatMessage.module.scss';\r\n\r\nexport const ChatMessage = (props) => {\r\n  const msgCreatedAt = new Date(props.createdAt);\r\n  const time = `${msgCreatedAt.getHours()}:${msgCreatedAt.getMinutes()}`;\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        classes.Container,\r\n        props.type === 'recevied'\r\n          ? classes.Recevied\r\n          : props.type === 'sent'\r\n          ? classes.Sent\r\n          : null,\r\n      ].join(' ')}\r\n    >\r\n      <p className={classes.Msg}>{props.msg}</p>\r\n      <p className={classes.Date}>{time}</p>\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL:\r\n    process.env.NODE_ENV === 'development'\r\n      ? 'http://127.0.0.1:4000/api/v1'\r\n      : 'https://p-to-p-chat.herokuapp.com/api/v1',\r\n  withCredentials: true,\r\n});\r\n\r\nexport default instance;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const ErrorContext = createContext({\r\n  error: null,\r\n  setError: () => {},\r\n});\r\n\r\nexport const ErrorProvider = (props) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  return (\r\n    <ErrorContext.Provider value={{ error, setError }}>\r\n      {props.children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n} from 'react';\r\nimport { loggedIn } from '../socket';\r\nimport axios from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ErrorContext } from './Error';\r\nimport { isEmail } from '../isEmail';\r\n\r\nexport const AuthContext = createContext({\r\n  user: null,\r\n  setUser: () => {},\r\n  authLoading: true,\r\n  sendAuthReq: async () => {},\r\n});\r\n\r\nexport const AuthProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { setError } = useContext(ErrorContext);\r\n  const { push } = useHistory();\r\n\r\n  const getMe = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.get('/users/me');\r\n      const user = res.data.data;\r\n      setUser(user);\r\n      loggedIn(user);\r\n      push('/');\r\n    } catch (error) {\r\n      push('/login');\r\n    }\r\n    setIsLoading(false);\r\n  }, [push]);\r\n\r\n  useEffect(() => {\r\n    getMe();\r\n  }, [getMe]);\r\n\r\n  const sendAuthReq = async (url, data) => {\r\n    if (data.username && data.username.replace(/\\s/g, '') === '') {\r\n      return setError({ message: 'Username not valid.' });\r\n    }\r\n\r\n    if (!isEmail(data.email) || data.password.length < 8) {\r\n      return setError({ message: 'Try again with a valid values.' });\r\n    }\r\n\r\n    if (data.passwordConfirm && data.passwordConfirm !== data.password) {\r\n      return setError({ message: 'Passwords does not match.' });\r\n    }\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios.post(`/users${url}`, data);\r\n      const user = res.data.data;\r\n      setUser(user);\r\n      loggedIn(user);\r\n      push('/');\r\n    } catch (error) {\r\n      setError(error.response.data);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, setUser, authLoading: isLoading, sendAuthReq }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export const isEmail = (email) => {\r\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  return emailRegex.test(email.toLowerCase());\r\n};\r\n","import React, { useRef, useEffect, useContext, useState } from 'react';\r\nimport classes from './ChattingMessages.module.scss';\r\nimport { ChatMessage } from './ChatMessage/ChatMessage';\r\nimport { AuthContext } from '../../../context/Auth';\r\nimport { useParams } from 'react-router-dom';\r\nimport { socket } from '../../../socket';\r\n\r\nexport const ChattingMessages = () => {\r\n  const containerRef = useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n  const { username } = useParams();\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n  }, [msgs, isLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    socket.emit('room', { curUser: user.username, chatWith: username });\r\n    socket.on('getAllMsgs', (data) => {\r\n      setMsgs(data);\r\n      setIsLoading(false);\r\n    });\r\n  }, [user, username]);\r\n\r\n  useEffect(() => {\r\n    socket.on('sendmsg', (data) => setMsgs((prev) => [...prev, data]));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Msgs} ref={containerRef}>\r\n      {isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        msgs.map((msg, i) => (\r\n          <ChatMessage\r\n            key={`${msg.user}-${i}`}\r\n            type={msg.user === user.username ? 'sent' : 'recevied'}\r\n            createdAt={msg.createdAt}\r\n            msg={msg.message}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useRef } from 'react';\r\nimport classes from './ChattingSend.module.scss';\r\nimport { TextareaAutosize as Textarea } from '@material-ui/core';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { FiSend } from 'react-icons/fi';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context/Auth';\r\nimport { socket } from '../../../socket';\r\n\r\nexport const ChattingSend = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { username } = useParams();\r\n\r\n  const msgRef = useRef(null);\r\n\r\n  const sendMsgHandler = () => {\r\n    if (msgRef.current.value.trim() === '') {\r\n      return (msgRef.current.value = '');\r\n    }\r\n    socket.emit('sendmsg', {\r\n      message: msgRef.current.value,\r\n      from: user.username,\r\n      to: username,\r\n    });\r\n    msgRef.current.value = '';\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Send}>\r\n      <Textarea\r\n        placeholder=\"Type a message...\"\r\n        className={classes.SendTextarea}\r\n        ref={msgRef}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13 && !e.shiftKey) {\r\n            e.preventDefault();\r\n            sendMsgHandler();\r\n          }\r\n        }}\r\n      />\r\n      <Button className={classes.SendBtn} onClick={sendMsgHandler}>\r\n        <FiSend />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Chatting.module.scss';\r\nimport { Header } from './Header/Header';\r\nimport { ChattingMessages } from './ChattingMessages/ChattingMessages';\r\nimport { ChattingSend } from './ChattingSend/ChattingSend';\r\n\r\nexport const Chatting = () => {\r\n  return (\r\n    <div className={classes.Chat}>\r\n      <Header />\r\n      <ChattingMessages />\r\n      <ChattingSend />\r\n    </div>\r\n  );\r\n};\r\n","import React, { forwardRef } from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\nexport const Input = forwardRef((props, ref) => {\r\n  return (\r\n    <input\r\n      type={props.type || 'text'}\r\n      placeholder={props.placeholder}\r\n      className={[classes.Input, props.className].join(' ')}\r\n      required\r\n      ref={ref}\r\n    />\r\n  );\r\n});\r\n","import React, { useRef, useContext } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context/Auth';\r\nimport { ErrorContext } from '../../../context/Error';\r\n\r\nexport const Login = () => {\r\n  const { sendAuthReq, authLoading: isLoading } = useContext(AuthContext);\r\n  const { error } = useContext(ErrorContext);\r\n  const email = useRef(null);\r\n  const password = useRef(null);\r\n\r\n  const submitHanlder = () =>\r\n    sendAuthReq('/login', {\r\n      email: email.current.value,\r\n      password: password.current.value,\r\n    });\r\n\r\n  return (\r\n    <form\r\n      className={classes.Auth}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        return submitHanlder();\r\n      }}\r\n    >\r\n      <h2>Log in</h2>\r\n      {error ? <p className={classes.AuthError}>{error.message}</p> : null}\r\n      <Input type=\"email\" placeholder=\"Your E-mail\" ref={email} />\r\n      <Input type=\"password\" placeholder=\"Your Password\" ref={password} />\r\n      <Button>{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n      <Link to=\"/signup\">Create new account</Link>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useRef, useContext } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context/Auth';\r\nimport { ErrorContext } from '../../../context/Error';\r\n\r\nexport const Signup = () => {\r\n  const { sendAuthReq, authLoading: isLoading } = useContext(AuthContext);\r\n  const { error } = useContext(ErrorContext);\r\n  const username = useRef(null);\r\n  const email = useRef(null);\r\n  const password = useRef(null);\r\n  const passwordConfirm = useRef(null);\r\n\r\n  const submitHanlder = () =>\r\n    sendAuthReq('/signup', {\r\n      username: username.current.value,\r\n      email: email.current.value,\r\n      password: password.current.value,\r\n      passwordConfirm: passwordConfirm.current.value,\r\n    });\r\n\r\n  return (\r\n    <form\r\n      className={classes.Auth}\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        return submitHanlder();\r\n      }}\r\n    >\r\n      <h2>Sign up</h2>\r\n\r\n      {error ? <p>{error.message}</p> : null}\r\n      <Input type=\"text\" placeholder=\"Your Username\" ref={username} />\r\n      <Input type=\"email\" placeholder=\"Your E-mail\" ref={email} />\r\n      <Input type=\"password\" placeholder=\"Your Password\" ref={password} />\r\n      <Input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Your Password\"\r\n        ref={passwordConfirm}\r\n      />\r\n      <Button>{isLoading ? 'Loading...' : 'Submit'}</Button>\r\n      <Link to=\"/login\">Login to your account</Link>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport './App.scss';\r\nimport { Layout } from './hoc/Layout/Layout';\r\nimport { Container } from '@material-ui/core';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Chatting } from './containers/Chatting/Chatting';\r\nimport { ThemeContext } from './context/Theme';\r\nimport { AuthContext } from './context/Auth';\r\nimport { Login } from './containers/Auth/Login/Login';\r\nimport { Signup } from './containers/Auth/Signup/Signup';\r\n\r\nfunction App() {\r\n  const { isDark } = useContext(ThemeContext);\r\n  const { user, authLoading } = useContext(AuthContext);\r\n\r\n  let render = (\r\n    <Layout>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div\r\n            style={{\r\n              height: '100%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <h1>Select User</h1>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/chat/:username\">\r\n          <Chatting />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n\r\n  if (!user) {\r\n    render = (\r\n      <div\r\n        style={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Container fixed maxWidth=\"sm\">\r\n          {authLoading ? (\r\n            <h1 style={{ textAlign: 'center' }}>Loading...</h1>\r\n          ) : (\r\n            <Switch>\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Redirect to=\"/login\" />\r\n            </Switch>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={['App', isDark ? 'Dark' : 'Light'].join(' ')}>{render}</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import './socket';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { AuthProvider } from './context/Auth';\r\nimport { ErrorProvider } from './context/Error';\r\nimport { ThemeProvider } from './context/Theme';\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ErrorProvider>\r\n        <AuthProvider>\r\n          <ThemeProvider>\r\n            <App />\r\n          </ThemeProvider>\r\n        </AuthProvider>\r\n      </ErrorProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Usr\":\"User_Usr__3MsOa\",\"UsrPic\":\"User_UsrPic__109hm\",\"UsrPicOnline\":\"User_UsrPicOnline__3nFIW\",\"UsrName\":\"User_UsrName__yNN1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ChatMessage_Container__2IsQr\",\"Msg\":\"ChatMessage_Msg__1U98C\",\"Recevied\":\"ChatMessage_Recevied__1zSaq\",\"Sent\":\"ChatMessage_Sent__Jfl94\",\"Date\":\"ChatMessage_Date__2C6CW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__28SGs\",\"AuthError\":\"Auth_AuthError__3r9be\"};","module.exports = __webpack_public_path__ + \"static/media/default.5881650b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2_ci0\",\"HeaderImg\":\"Header_HeaderImg__YJ_cK\",\"HeaderName\":\"Header_HeaderName__eYVeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Send\":\"ChattingSend_Send__1ztL_\",\"SendTextarea\":\"ChattingSend_SendTextarea__1G_f3\",\"SendBtn\":\"ChattingSend_SendBtn__Zjerc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Right\":\"Layout_Right__2hNw0\",\"Left\":\"Layout_Left__1eF2e\",\"ThemeBtn\":\"Layout_ThemeBtn__oe5wA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__3Kw6G\",\"UsersTitle\":\"Users_UsersTitle__1ioh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__22W31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chatting_Chat__KlwHr\",\"Error\":\"Chatting_Error__3VsbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Msgs\":\"ChattingMessages_Msgs__h3PUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3nJZI\"};"],"sourceRoot":""}