{"version":3,"sources":["components/Button/Button.js","components/User/User.js","socket.js","components/Users/Users.js","hoc/Layout/Layout.js","containers/Chatting/Header/Header.js","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.js","context/Auth/AuthContext.js","containers/Chatting/ChattingMessages/ChattingMessages.js","containers/Chatting/ChattingSend/ChattingSend.js","containers/Chatting/Chatting.js","components/Input/Input.js","axios.js","hooks/useAuth.js","containers/Auth/Login/Login.js","containers/Auth/Signup/Signup.js","App.js","serviceWorker.js","context/Auth/AuthProvider.js","index.js","components/User/User.module.scss","containers/Chatting/ChattingMessages/ChatMessage/ChatMessage.module.scss","assets/jeffrey_000.png","containers/Auth/Auth.module.scss","hoc/Layout/Layout.module.scss","containers/Chatting/Header/Header.module.scss","containers/Chatting/ChattingSend/ChattingSend.module.scss","components/Users/Users.module.scss","containers/Chatting/Chatting.module.scss","components/Button/Button.module.scss","containers/Chatting/ChattingMessages/ChattingMessages.module.scss","components/Input/Input.module.scss"],"names":["Button","props","className","classes","Btn","join","onClick","type","children","User","to","Usr","UsrPic","online","UsrPicOnline","src","pic","alt","UsrName","name","socket","io","connect","Users","useState","users","setUsers","useEffect","on","onlineUsers","UsersTitle","map","user","key","username","Layout","Grid","container","spacing","item","xs","Right","Logout","Header","photo","HeaderImg","HeaderName","ChatMessage","msgCreatedAt","Date","createdAt","time","getHours","getMinutes","Container","Recevied","Sent","Msg","AuthContext","createContext","setUser","ChattingMessages","msgsRef","useRef","useContext","current","scrollTop","scrollHeight","msgs","Msgs","ref","msg","i","message","ChattingSend","Send","placeholder","SendTextarea","value","onChange","e","setMsg","target","onKeyDown","keyCode","shiftKey","preventDefault","sendMsg","SendBtn","Chatting","useParams","isMounted","setIsMounted","error","serError","setMsgs","console","log","Error","emit","curUser","chatWith","data","prev","Chat","trim","from","Input","required","instance","axios","create","baseURL","withCredentials","useAuth","setError","push","useHistory","setter","useCallback","res","sendAuthReq","url","a","post","response","getMe","get","Login","email","setEmail","password","setPassword","maxWidth","Auth","Signup","setUserName","passwordConfirm","setPasswordConfirm","App","render","exact","path","style","height","display","alignItems","justifyContent","Boolean","window","location","hostname","match","AuthProvider","Provider","app","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.a228961c.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Button.module.scss';\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <button\r\n      className={[classes.Btn, props.className].join(' ')}\r\n      onClick={props.onClick}\r\n      type={props.type || 'button'}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './User.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport pic from '../../assets/jeffrey_000.png';\r\n\r\nexport const User = (props) => {\r\n  return (\r\n    <Link to={props.to} className={classes.Usr}>\r\n      <div className={classes.UsrPic}>\r\n        {props.online ? <div className={classes.UsrPicOnline}></div> : null}\r\n        <img src={pic} alt=\"\" className={classes.UsrPic} />\r\n      </div>\r\n      <p className={classes.UsrName}>{props.name}</p>\r\n    </Link>\r\n  );\r\n};\r\n","import io from 'socket.io-client';\r\nexport const socket = io.connect('http://127.0.0.1:4000');\r\n\r\nexport const loggedIn = (user) => socket.emit('loggedIn', user);\r\n","import React, { useEffect, useState } from 'react';\r\nimport classes from './Users.module.scss';\r\nimport { User } from '../User/User';\r\nimport { socket } from '../../socket';\r\n\r\nexport const Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('userloggedin', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n    socket.on('userloggedout', (onlineUsers) => {\r\n      setUsers(onlineUsers);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.Users}>\r\n      <h2 className={classes.UsersTitle}>Users</h2>\r\n\r\n      {users.map((user) => (\r\n        <User\r\n          key={user.username}\r\n          name={user.username}\r\n          to={`/chat/${user.username}`}\r\n          online={user.online}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Layout.module.scss';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Button } from '../../components/Button/Button';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { Users } from '../../components/Users/Users';\r\n\r\nexport const Layout = (props) => {\r\n  return (\r\n    <div className={classes.Layout}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={2} className={classes.Right}>\r\n          <Users />\r\n          <Button className={classes.Logout}>\r\n            <FiLogOut /> <p>Logout</p>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          {props.children}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Header.module.scss';\r\n\r\nexport const Header = (props) => {\r\n  return (\r\n    <div className={classes.Header}>\r\n      <img src={props.photo} alt=\"\" className={classes.HeaderImg} />\r\n      <p className={classes.HeaderName}>{props.name}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './ChatMessage.module.scss';\r\n\r\nexport const ChatMessage = (props) => {\r\n  const msgCreatedAt = new Date(props.createdAt);\r\n\r\n  const time = `${msgCreatedAt.getHours()}:${msgCreatedAt.getMinutes()}`;\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        classes.Container,\r\n\r\n        props.type === 'recevied'\r\n          ? classes.Recevied\r\n          : props.type === 'sent'\r\n          ? classes.Sent\r\n          : null,\r\n      ].join(' ')}\r\n    >\r\n      <p className={classes.Msg}>{props.children}</p>\r\n      <p className={classes.Date}>{time}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  setUser: () => {},\r\n});\r\n\r\nexport default AuthContext;\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport classes from './ChattingMessages.module.scss';\r\nimport { ChatMessage } from './ChatMessage/ChatMessage';\r\nimport AuthContext from '../../../context/Auth/AuthContext';\r\n\r\nexport const ChattingMessages = (props) => {\r\n  const msgsRef = useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    msgsRef.current.scrollTop = msgsRef.current.scrollHeight;\r\n  }, [props.msgs]);\r\n\r\n  return (\r\n    <div className={classes.Msgs} ref={msgsRef}>\r\n      {props.msgs.map((msg, i) => (\r\n        <ChatMessage\r\n          key={`${msg.user}-${i}`}\r\n          type={msg.user === user.username ? 'sent' : 'recevied'}\r\n          createdAt={msg.createdAt}\r\n        >\r\n          {msg.message}\r\n        </ChatMessage>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './ChattingSend.module.scss';\r\nimport { TextareaAutosize as Textarea } from '@material-ui/core';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { FiSend } from 'react-icons/fi';\r\n\r\nexport const ChattingSend = (props) => {\r\n  return (\r\n    <div className={classes.Send}>\r\n      <Textarea\r\n        placeholder=\"Type a message...\"\r\n        className={classes.SendTextarea}\r\n        value={props.msg}\r\n        onChange={(e) => props.setMsg(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13 && !e.shiftKey) {\r\n            e.preventDefault();\r\n            props.sendMsg();\r\n          }\r\n        }}\r\n      />\r\n      <Button className={classes.SendBtn} onClick={props.sendMsg}>\r\n        <FiSend />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport classes from './Chatting.module.scss';\r\nimport pic from '../../assets/jeffrey_000.png';\r\nimport { Header } from './Header/Header';\r\nimport { ChattingMessages } from './ChattingMessages/ChattingMessages';\r\nimport { ChattingSend } from './ChattingSend/ChattingSend';\r\nimport { useParams } from 'react-router-dom';\r\nimport { socket } from '../../socket';\r\nimport AuthContext from '../../context/Auth/AuthContext';\r\n\r\nexport const Chatting = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { username } = useParams();\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [error, serError] = useState(null);\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('render');\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n    if (isMounted) {\r\n      serError(null);\r\n      setMsg(null);\r\n      setMsg('');\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [username, isMounted]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      if (username === user.username) {\r\n        serError(\r\n          <h1 className={classes.Error}>You can't chat with yourself</h1>\r\n        );\r\n      } else {\r\n        socket.emit('room', { curUser: user.username, chatWith: username });\r\n        socket.on('getAllMsgs', (data) => {\r\n          setMsgs(data);\r\n        });\r\n      }\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [user, username, isMounted]);\r\n\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      socket.on('sendmsg', (data) => setMsgs((prev) => [...prev, data]));\r\n    }\r\n    return () => setIsMounted(false);\r\n  }, [username, isMounted]);\r\n\r\n  const sendMsgHandler = () => {\r\n    if (msg.trim() === '') {\r\n      return setMsg('');\r\n    }\r\n    socket.emit('sendmsg', {\r\n      message: msg,\r\n      from: user.username,\r\n      to: username,\r\n    });\r\n    setMsg('');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Chat}>\r\n      <Header photo={pic} name={username} />\r\n      {error ? (\r\n        error\r\n      ) : (\r\n        <>\r\n          <ChattingMessages msgs={msgs} />\r\n          <ChattingSend sendMsg={sendMsgHandler} msg={msg} setMsg={setMsg} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport classes from './Input.module.scss';\r\n\r\nexport const Input = (props) => {\r\n  return (\r\n    <input\r\n      type={props.type || 'text'}\r\n      placeholder={props.placeholder}\r\n      className={[classes.Input, props.className].join(' ')}\r\n      onChange={props.onChange}\r\n      required\r\n    />\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://desolate-shelf-39948.herokuapp.com/api/v1',\r\n  withCredentials: true,\r\n});\r\n\r\nexport default instance;\r\n","import { useState, useContext, useCallback } from 'react';\r\nimport AuthContext from '../context/Auth/AuthContext';\r\nimport { loggedIn } from '../socket';\r\nimport axios from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const useAuth = () => {\r\n  const [error, setError] = useState(null);\r\n  const { setUser } = useContext(AuthContext);\r\n  const { push } = useHistory();\r\n\r\n  const setter = useCallback(\r\n    (res) => {\r\n      setUser(res.data.data);\r\n      loggedIn(res.data.data);\r\n      push('/');\r\n    },\r\n    [setUser, push]\r\n  );\r\n\r\n  const sendAuthReq = async (url, data) => {\r\n    try {\r\n      const res = await axios.post(`/users/${url}`, data);\r\n      setter(res);\r\n    } catch (error) {\r\n      setError(error.response.data);\r\n    }\r\n  };\r\n\r\n  const getMe = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get('/users/me');\r\n      setter(res);\r\n    } catch (error) {\r\n      setError(true);\r\n      push('/login');\r\n    }\r\n  }, [push, setter]);\r\n\r\n  return { sendAuthReq, error, getMe };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { sendAuthReq, error } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log(error);\r\n  }, [error]);\r\n\r\n  const submitHandler = () => sendAuthReq('/login', { email, password });\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <div className={classes.Auth}>\r\n        <p>Log in</p>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Your E-mail\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"Your Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Button onClick={submitHandler}>Submit</Button>\r\n        <Link to=\"/signup\">Create a new account</Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport classes from '../Auth.module.scss';\r\nimport { Input } from '../../../components/Input/Input';\r\nimport { Button } from '../../../components/Button/Button';\r\nimport { Container } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\n\r\nexport const Signup = () => {\r\n  const [username, setUserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const { sendAuthReq, error } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log(error);\r\n  }, [error]);\r\n\r\n  const submitHandler = () =>\r\n    sendAuthReq('/signup', { username, email, password, passwordConfirm });\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <div className={classes.Auth}>\r\n        <p>Sign up</p>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Your Name\"\r\n          onChange={(e) => setUserName(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Your E-mail\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"Your Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"Confrim Your Password\"\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n        />\r\n        <Button onClick={submitHandler}>Submit</Button>\r\n        <Link to=\"/login\">Login to your account</Link>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport './App.scss';\r\nimport { Layout } from './hoc/Layout/Layout';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Chatting } from './containers/Chatting/Chatting';\r\nimport { Login } from './containers/Auth/Login/Login';\r\nimport { Signup } from './containers/Auth/Signup/Signup';\r\nimport AuthContext from './context/Auth/AuthContext';\r\nimport { useAuth } from './hooks/useAuth';\r\n\r\nfunction App() {\r\n  const { user } = useContext(AuthContext);\r\n  const { getMe, error } = useAuth();\r\n\r\n  useEffect(() => {\r\n    getMe();\r\n  }, [getMe]);\r\n\r\n  let render = (\r\n    <Layout>\r\n      <Switch>\r\n        {/* <Route path=\"/login\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <Redirect to=\"/\" />\r\n        </Route> */}\r\n        <Route exact path=\"/\">\r\n          <div\r\n            style={{\r\n              height: '100%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <h1>Select User</h1>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/chat/:username\">\r\n          <Chatting />\r\n        </Route>\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n\r\n  if (!user) {\r\n    render = (\r\n      <div\r\n        style={{\r\n          height: '100vh',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {error ? (\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return render;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport AuthContext from './AuthContext';\r\n\r\nconst AuthProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { socket } from './socket';\r\nimport AuthProvidor from './context/Auth/AuthProvider';\r\n\r\n(() => socket)();\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <AuthProvidor>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </AuthProvidor>\r\n  </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Usr\":\"User_Usr__2ONx8\",\"UsrPic\":\"User_UsrPic__2gE94\",\"UsrPicOnline\":\"User_UsrPicOnline__27DWs\",\"UsrName\":\"User_UsrName__3IkUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ChatMessage_Container__2Cnpz\",\"Msg\":\"ChatMessage_Msg__kFxk5\",\"Recevied\":\"ChatMessage_Recevied__1YT_Q\",\"Sent\":\"ChatMessage_Sent__3tWZH\",\"Date\":\"ChatMessage_Date__1qCTj\"};","module.exports = __webpack_public_path__ + \"static/media/jeffrey_000.1dad94d1.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3aB5K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2ugx7\",\"Right\":\"Layout_Right__1Quyd\",\"Left\":\"Layout_Left__1TEt3\",\"Logout\":\"Layout_Logout__uaXam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2W_-S\",\"HeaderImg\":\"Header_HeaderImg__XxUoO\",\"HeaderName\":\"Header_HeaderName__1tDVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Send\":\"ChattingSend_Send__CJ-Ny\",\"SendTextarea\":\"ChattingSend_SendTextarea__1lYt8\",\"SendBtn\":\"ChattingSend_SendBtn__2L8xx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__209Fa\",\"UsersTitle\":\"Users_UsersTitle__20rPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chatting_Chat__1i6W-\",\"Error\":\"Chatting_Error__3Qj7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__3vq0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Msgs\":\"ChattingMessages_Msgs__3X1xr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__cbq6C\"};"],"sourceRoot":""}